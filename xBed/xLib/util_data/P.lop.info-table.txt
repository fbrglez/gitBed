# This table documents principal variables defined under the solver domain P.lop
# P = permutation-based coordinates, lop = linear ordering problem
# Valid values that interpreted a default values for optional arguments include:
#       integers, reals, FALSE, NA, strings of contiguous non-space characters other than 
#       the two special keywords 'required' and 'internal'. These two keywords are
#       are interpreted internally to the program and do not flag optional arguments.
# Characters ';' and '"' should be excluded from variable description.
#
# All variable descriptions are limited to about 70 characters per line; if description
# is on more than single line, variableName and variableDefault must be repeated for each continuation line
#
# variableName	     variableDefault	variableDescription
cntProbe            internal      Counts the number of objective function invocations.
cntProbeLmt         2147483647    Stop if the solver reaches this value.
cntRestart          internal      Counts the number of restarts internal to the solver.
cntRestartLmt       2147483647    Stop if the solver reaches this value.
cntStep             internal      Counts the number of pivot steps during the walk.
coordBest           internal      A follow-up coordinate on coordInit, associated with valueBest.
coordInit           NA            If NA, a random permutation coordinate is generated internally
coordInit           NA            as a string of size nDim — unless initial coordinate is entered by the user.
coordType           internal      A coordinate type: B for binary, P for permutation, T for ternary, etc.
globalInstance      internal      Labels of all global arrays groups associated with the solver domain, 
globalInstance      internal      e.g. under P.lop domain look for labels of these global statements:
globalSolver        internal      global instance: later …. later … later…
globalSolver        internal      global   solver: later … later…
hostID              internal      A string of contiguous non-space characters derived from solver environment.
initOnly            FALSE         If asserted, only the procedure *.init is invoked, solver exits afterwards.
instanceDef         required      Required command-line value: this can be a single integer, a string of 
instanceDef         required      contiguous non-space characters, or a relative/absolute filePath.
instanceID          internal      A string of contiguous non-space characters derived from instanceDef.
isCensored          internal      If solver returns FALSE, runtime and other results are being censored.
isP.lopP            FALSE         If asserted, results are generated in bash by command P.lopP, P=python.
isSimple            FALSE         If asserted, simpler-to-code but less efficient procedures are invoked.
isT.lopT            FALSE         If asserted, results are generated in bash by command P.lopT, T=tcl.
nDim                internal      The effective size of coordinate related to instanceDef.
neighbDist          1             By default, neighbDist = 1 probes the pivot neighborhood at
neighbDist          1             distance of 1 only -- the maximum distance <= nDim*(nDim-1)/2.
notSAW              FALSE         If asserted, the self-avoiding walk principles are disabled.
notStdout           FALSE         If asserted, results are not reported to stdout.
runtime             internal      Measures the solver runtime in seconds.
runtimeLmt          30            Stop if the solver runtime exceeds these many seconds.
seedInit            NA            If NA, a random positive integer is created to initialize a
seedInit            NA            random number generator.
solverDomain        internal      Also the name of the project directory, e.g. P.lop, P2A.cryptp, etc.
solverID            internal      A string of contiguous non-space characters derived from solver parameters.
targetReached       internal      If solver returns TRUE, objective function target value has been reached.
valueBest           internal      A value returned by objective function, given coordBest.
valueInit           internal      A value returned by objective function, given coordInit.
valueTarget         NA            Objective function target value -- solver stops on reaching this value.
valueTol    0.0     A             coefficient to adjust valueTarget = valueTarget*(1 + valueTol).
walkIntervalCoef    NA            A coefficient that determines walkIntervalLmt as walkIntervalCoef*nDim.
walkIntervalLmt     NA            Inactive unless assigned an integer or if walkIntervalCoef
walkIntervalLmt     NA            is assigned a real value.
walkLengthLmt       2147483647    Stop if the solver reaches this value.
walkRepeatsLmt      NA            Inactive unless assigned an integer. If an integer, the walk is
walkRepeatsLmt      NA            monitored for repeats of valueBest. If walkRepeats > walkRepeatsLmt,
walkRepeatsLmt      NA            the self-avoiding walk branches from another coordinate with valueBest.
walkSegmCoef        NA            A coefficient that determines walkSegmLmt as walkSegmCoef*nDim.
walkSegmLmt         NA            Inactive unless assigned an integer or if walkSegmCoef is assigned a real value.
writeVar            0             An integer variable to control levels of stdout:
writeVar            0             If 0, do stdout with minimum lines of text.
writeVar            0             If 1, do stdout of all variable values initialized under procedure *.init.
writeVar            0             If 2, do stdout of cntRestart trace.
writeVar            0             If 3, do stdout of distance=1 neighborhood probing and pivot selection.
writeVar            0             If 4, do stdout of valueBest-only during the walk.
writeVar            0             If 5, do stdout of up/down values during the walk.
writeVar            0             If 6, do stdout of up/down values during the walk that includes all  
writeVar            0             'probed neighborhood values' at each step.

